{"version":3,"sources":["components/SVG/Body/styles.js","components/SVG/Body/component.js","components/SVG/Clothes/styles.js","components/SVG/Clothes/component.js","components/SVG/Hair/styles.js","components/SVG/Hair/component.js","hooks/useWindowSize.js","screens/Landing/styles.js","components/ColorOption/styles.js","components/ColorOption/component.js","components/Sidebar/styles.js","components/Sidebar/component.js","components/Button/styles.js","components/Button/component.js","screens/Landing/component.js","serviceWorker.js","index.js"],"names":["styled","div","Body","color","shadowColor","Color","darken","hex","className","fill","height","viewBox","width","xmlns","d","clipRule","fillRule","Clothes","Hair","useWindowSize","isClient","window","getSize","useCallback","innerWidth","undefined","innerHeight","useState","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","ColorOption","label","onChange","displayColorPicker","setDisplayColorPicker","onClick","onChangeComplete","Sidebar","colors","body","clothes","hair","StyledButton","button","disabled","Button","loading","defaultProps","initialColors","Landing","setColors","isDownloading","setIsDownloading","onColorChange","key","downloadAvatar","a","avatar","document","getElementById","domtoimage","toBlob","blob","FileSaver","saveAs","console","log","id","Boolean","location","hostname","match","ReactDOM","render","basename","component","exact","path","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4ddacbf9.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport default styled.div`\n  .head {\n    left: 135px;\n    position: absolute;\n    top: 65px;\n  }\n\n  .neck {\n    left: 167px;\n    position: absolute;\n    top: 196px;\n  }\n\n  .neck-shadow {\n    left: 176px;\n    position: absolute;\n    top: 199px;\n  }\n\n  .nose {\n    left: 210px;\n    position: absolute;\n    top: 161px;\n  }\n\n  .torso {\n    bottom: 0;\n    position: absolute;\n    right: 41px;\n  }\n`;\n","import Color from 'color';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Styled from './styles';\n\nconst Body = ({ color }) => {\n  const shadowColor = Color(color).darken(0.1).hex();\n\n  return (\n    <Styled>\n      <svg\n        className=\"torso\"\n        fill=\"none\"\n        height=\"164\"\n        viewBox=\"0 0 318 164\"\n        width=\"318\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M183.928 3.1778C177.841 22.6586 153.846 25.485 140.627 9.83078L132.974 0.786122C132.974 0.786122 116.798 0.0903844 107.927 2.17761C82.1848 8.09142 0 45.6228 0 163.764C65.7481 163.764 317.346 163.764 317.346 163.764C292.473 14.527 183.928 3.1778 183.928 3.1778Z\"\n          fill={color}\n        />\n      </svg>\n      <svg\n        className=\"neck\"\n        fill=\"none\"\n        height=\"109\"\n        viewBox=\"0 0 61 109\"\n        width=\"61\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M18.3828 7.7092L0.989197 59.8899L11.4253 73.6308L39.255 108.418L56.6486 84.0669L57.3443 47.1926L60.1273 11.1879L32.2976 0.75177L18.3828 7.7092Z\"\n          fill={color}\n        />\n      </svg>\n      <svg\n        className=\"neck-shadow\"\n        fill=\"none\"\n        height=\"42\"\n        viewBox=\"0 0 52 42\"\n        width=\"52\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          clipRule=\"evenodd\"\n          d=\"M0.822205 30.3909L9.38278 4.70918L18.4743 0.163422L34.6913 2.02439L51.1273 8.18789L48.774 38.6342C22.4097 45.0774 7.37648 37.625 0.822205 30.3909Z\"\n          fill={shadowColor}\n          fillRule=\"evenodd\"\n        />\n      </svg>\n      <svg\n        className=\"head\"\n        fill=\"none\"\n        height=\"172\"\n        viewBox=\"0 0 142 172\"\n        width=\"142\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          clipRule=\"evenodd\"\n          d=\"M10.5513 109.55C19.7438 142.521 46.7102 161.406 78.1159 164.092C99.2423 167.145 145.371 131.406 130.97 61.7284C121.433 15.3285 99.8001 -2.71127 66.4181 7.57322L8.05163 38.2875L10.5513 109.55Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n        />\n      </svg>\n      <svg\n        className=\"nose\"\n        fill=\"none\"\n        height=\"21\"\n        viewBox=\"0 0 17 21\"\n        width=\"17\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M13.2342 10.68C9.02296 7.8259 5.85092 3.21151 4.46275 0.482931L0.977564 20.2492C3.84768 20.929 9.55067 21.0623 14.6521 18.0707C17.3791 16.4715 15.8511 12.4536 13.2342 10.68Z\"\n          fill={shadowColor}\n        />\n      </svg>\n    </Styled>\n  );\n};\n\nBody.propTypes = {\n  color: PropTypes.string.isRequired,\n};\n\nexport default Body;\n","import styled from 'styled-components';\n\nexport default styled.div`\n  .clothes {\n    position: absolute;\n    bottom: 0;\n    right: 62px;\n    z-index: 1;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Styled from './styles';\n\nconst Clothes = ({ color }) => (\n  <Styled>\n    <svg\n      className=\"clothes\"\n      fill=\"none\"\n      height=\"163\"\n      viewBox=\"0 0 286 163\"\n      width=\"286\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        clipRule=\"evenodd\"\n        d=\"M172.928 2.50297C166.841 21.9838 142.846 24.8102 129.627 9.15595L121.974 0.111286C121.974 0.111286 105.798 -0.584451 96.9273 1.50278C77.1511 6.04595 24.0638 29.2492 0.518188 93.3252C10.8544 99.7567 35.6684 112.025 45.5 113.5C41.5055 124.757 39.6208 145.246 40.2293 163.089H255.249C252.901 146.77 246.27 128.238 242.099 116.579L242.099 116.579L242.098 116.578C241.709 115.489 241.341 114.461 241 113.5C250.902 112.015 275.02 100.072 285.201 93.6885C245.066 10.0456 172.928 2.50297 172.928 2.50297Z\"\n        fill={color}\n        fillRule=\"evenodd\"\n      />\n    </svg>\n  </Styled>\n);\n\nClothes.propTypes = {\n  color: PropTypes.string.isRequired,\n};\n\nexport default Clothes;\n","import styled from 'styled-components';\n\nexport default styled.div`\n  .hair {\n    left: 113px;\n    position: absolute;\n    top: 50px;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Styled from './styles';\n\nconst Hair = ({ color }) => {\n  return (\n    <Styled>\n      <svg\n        className=\"hair\"\n        fill=\"none\"\n        height=\"165\"\n        viewBox=\"0 0 173 165\"\n        width=\"173\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          clipRule=\"evenodd\"\n          d=\"M143.407 148.777C153.664 131.607 159.456 107.11 152.97 75.7285C150.545 63.9299 147.338 53.965 143.354 45.8333C145.727 44.9785 147.809 44.9637 149.5 46C165 55.5 178 155 170 161.5C162.733 167.405 148.039 163.819 140.535 161.989C139.779 161.804 139.095 161.637 138.5 161.5C140.157 157.949 141.855 153.522 143.407 148.777Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n        />\n        <path\n          d=\"M52.0002 69.5C82.4002 81.5 139 73.5 158 65.5C133 -28.5 37.5002 -7.49998 15.0002 48.5C-0.25923 86.479 -3.49983 141.545 6.00016 154.5C11.5001 162 27.0002 165 52.0002 162C46.0002 140.5 65.0002 108.5 52.0002 69.5Z\"\n          fill={color}\n        />\n      </svg>\n    </Styled>\n  );\n};\n\nHair.propTypes = {\n  color: PropTypes.string.isRequired,\n};\n\nexport default Hair;\n","import { useCallback, useEffect, useState } from \"react\";\n\nconst useWindowSize = () => {\n  const isClient = typeof window === \"object\";\n\n  const getSize = useCallback(() => {\n    return {\n      width: isClient ? window.innerWidth : undefined,\n      height: isClient ? window.innerHeight : undefined\n    };\n  }, [isClient]);\n\n  const [windowSize, setWindowSize] = useState(getSize);\n\n  useEffect(() => {\n    if (!isClient) {\n      return false;\n    }\n\n    function handleResize() {\n      setWindowSize(getSize());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, [getSize, isClient]); // Empty array ensures that effect is only run on mount and unmount\n\n  return windowSize;\n};\n\nexport default useWindowSize;\n","import styled from 'styled-components';\n\nexport default styled.div`\n  .avatar {\n    background-color: #f5fbff;\n    height: 400px;\n    position: relative;\n    width: 400px;\n  }\n\n  .button {\n    position: absolute;\n    bottom: 40px;\n  }\n\n  .body {\n    align-items: center;\n    display: flex;\n    flex: 1;\n    flex-direction: column;\n    justify-content: center;\n  }\n\n  .preview {\n    border: 20px solid white;\n    margin-bottom: 64px;\n  }\n\n  .root {\n    align-items: center;\n    background-color: #f5fbff;\n    display: flex;\n    height: ${({ height }) => `${height}px`};\n  }\n\n  .sidebar {\n    background-color: #f7f8f9;\n    box-shadow: 0px 0px 8px 1px rgba(0, 0, 0, 0.2);\n    height: ${({ height }) => `${height}px`};\n    padding: 0 24px;\n    width: 200px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport default styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n  padding: 8px 0;\n  position: relative;\n\n  .color-container {\n    background-color: #fff;\n    border-radius: 1px;\n    box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.1);\n    cursor: pointer;\n    padding: 5px;\n  }\n\n  .color-preview {\n    background-color: ${({ color }) => color};\n    border-radius: 2px;\n    height: 14px;\n    width: 36px;\n  }\n\n  .label {\n    margin-right: 8px;\n  }\n\n  .sketch-backdrop {\n    bottom: 0;\n    left:0;\n    position: fixed;\n    right: 0;\n    top: 0;\n    z-index: 1;\n  }\n\n  .sketch-picker {\n    left: 80px;\n    position: absolute;\n    top: 40px;\n    z-index: 2;\n\n  },\n`;\n","import React, { useState } from 'react';\nimport { SketchPicker } from 'react-color';\nimport PropTypes from 'prop-types';\n\nimport Styled from './styles';\n\nconst ColorOption = ({ color, label, onChange }) => {\n  const [displayColorPicker, setDisplayColorPicker] = useState(false);\n\n  return (\n    <Styled color={color}>\n      <p className=\"label\">{label}</p>\n      <div\n        className=\"color-container\"\n        onClick={() => setDisplayColorPicker(!displayColorPicker)}\n      >\n        <div className=\"color-preview\" />\n      </div>\n      {displayColorPicker ? (\n        <>\n          <div\n            className=\"sketch-backdrop\"\n            onClick={() => setDisplayColorPicker(false)}\n          />\n          <SketchPicker\n            className=\"picker\"\n            color={color}\n            onChangeComplete={onChange}\n          />\n        </>\n      ) : null}\n    </Styled>\n  );\n};\n\nColorOption.propTypes = {\n  color: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default ColorOption;\n","import styled from 'styled-components';\n\nexport default styled.div`\n  background-color: #f7f8f9;\n  box-shadow: 0px 0px 8px 1px rgba(0, 0, 0, 0.2);\n  height: ${({ height }) => `${height}px`};\n  padding: 0 24px;\n  width: 200px;\n\n  .headline {\n    font-size: 21px;\n    font-weight: 600;\n    margin-bottom: 32px;\n    margin-top: 24px;\n    text-align: center;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ColorOption from '../ColorOption';\nimport Styled from './styles';\nimport useWindowSize from '../../hooks/useWindowSize';\n\nconst Sidebar = ({ colors, onChange }) => {\n  const { height } = useWindowSize();\n  return (\n    <Styled height={height}>\n      <p className=\"headline\">Shiny Avatar Generator</p>\n      <ColorOption\n        color={colors.body}\n        label=\"Body color\"\n        onChange={onChange('body')}\n      />\n      <ColorOption\n        color={colors.clothes}\n        label=\"Clothes color\"\n        onChange={onChange('clothes')}\n      />\n      <ColorOption\n        color={colors.hair}\n        label=\"Hair color\"\n        onChange={onChange('hair')}\n      />\n    </Styled>\n  );\n};\n\nSidebar.propTypes = {\n  colors: PropTypes.shape({\n    body: PropTypes.string.isRequired,\n    clothes: PropTypes.string.isRequired,\n    hair: PropTypes.string.isRequired,\n  }).isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Sidebar;\n","import styled from 'styled-components';\n\nexport const StyledButton = styled.button`\n  align-items: center;\n  background-color: ${({ disabled }) => (!disabled ? '#4b5ffa' : '#a8baff')};\n  border-radius: 24px;\n  color: white;\n  cursor: pointer;\n  display: flex;\n  font-family: 'Rubik';\n  font-size: 18px;\n  height: 48px;\n  justify-content: center;\n  min-width: 200px;\n  padding: 8px 24px;\n`;\n\nexport const Label = styled.div``;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { StyledButton } from './styles';\n\nconst Button = ({ className, label, loading, onClick }) => {\n  return (\n    <StyledButton className={className} disabled={loading} onClick={onClick}>\n      {label}\n    </StyledButton>\n  );\n};\n\nButton.propTypes = {\n  className: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  loading: PropTypes.bool,\n  onClick: PropTypes.func.isRequired,\n};\n\nButton.defaultProps = {\n  className: '',\n  loading: false,\n};\n\nexport default Button;\n","/* global document */\nimport domtoimage from 'dom-to-image';\nimport FileSaver from 'file-saver';\nimport React, { useState, useCallback } from 'react';\n\nimport Body from '../../components/SVG/Body';\nimport Clothes from '../../components/SVG/Clothes';\nimport Hair from '../../components/SVG/Hair';\nimport useWindowSize from '../../hooks/useWindowSize';\nimport Styled from './styles';\nimport Sidebar from '../../components/Sidebar/component';\nimport Button from '../../components/Button';\n\nconst initialColors = {\n  body: '#FFE9D0',\n  clothes: '#458FFF',\n  hair: '#FFD947',\n};\n\nconst Landing = () => {\n  const { height } = useWindowSize();\n\n  const [colors, setColors] = useState(initialColors);\n  const [isDownloading, setIsDownloading] = useState(false);\n\n  const onColorChange = useCallback((key) => ({ hex }) =>\n    setColors({ ...colors, [key]: hex }),\n  );\n\n  const downloadAvatar = useCallback(async () => {\n    setIsDownloading(true);\n    try {\n      const avatar = document.getElementById('avatar');\n      const blob = await domtoimage.toBlob(avatar);\n      await FileSaver.saveAs(blob, 'avatar.png');\n    } catch (err) {\n      console.log(err);\n    } finally {\n      setIsDownloading(false);\n    }\n  }, []);\n\n  return (\n    <Styled height={height}>\n      <div className=\"root\">\n        <Sidebar colors={colors} onChange={onColorChange} />\n        <div className=\"body\">\n          <div className=\"preview\">\n            <div className=\"avatar\" id=\"avatar\">\n              <Clothes color={colors.clothes} />\n              <Body color={colors.body} />\n              <Hair color={colors.hair} />\n            </div>\n          </div>\n          <Button\n            className=\"button\"\n            label=\"Télécharger\"\n            loading={isDownloading}\n            onClick={downloadAvatar}\n          />\n        </div>\n      </div>\n    </Styled>\n  );\n};\n\nexport default Landing;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/* global document */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport Landing from './screens/Landing';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(\n  <HashRouter basename=\"/\">\n    <Route component={Landing} exact path=\"/\" />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}